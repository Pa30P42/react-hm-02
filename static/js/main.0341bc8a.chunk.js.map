{"version":3,"sources":["components/notification/statisticsNotifications/statisticsNotifications.js","components/notification/feedbackOptionsNotification/feedbackOptionsNotifications.js","components/notification/sectionsNotification/sectionsNotifications.js","components/notification/notification.js","contactsForm/Form.js","contacts/ContactItem.js","contacts/Contacts.js","filter/Filter.js","App.js","index.js"],"names":["StatisticsNotification","total","percentage","good","bad","neutral","className","name","FeedbackOptionsNotification","changeValue","type","onClick","SectionNotification","netral","Notification","state","e","target","setState","prevState","countTotalFeedback","this","Number","countPositiveFeedbackPercentage","Component","Form","id","number","handleChange","value","handeleSubmit","preventDefault","props","contacts","map","contact","find","item","alert","addContact","uuidv4","onSubmit","onChange","ContactItem","deleteContact","Contacts","key","Filter","getFilterValue","filter","App","getFilteredData","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0341bc8a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst StatisticsNotification = ({ total, percentage, good, bad, neutral }) => {\r\n  return (\r\n    <div className=\"statistics-container\">\r\n      <h2>Statistics</h2>\r\n      {total > 0 ? (\r\n        <>\r\n          {\" \"}\r\n          <p>Good</p>\r\n          <span name=\"good\">{good}</span>\r\n          <p>Neutral</p>\r\n          <span name=\"neutral\">{neutral}</span>\r\n          <p>Bad</p>\r\n          <span name=\"bad\">{bad}</span>\r\n          <p>Total</p>\r\n          <span name=\"total\">{total}</span>\r\n          <p>Percentage</p>\r\n          <span name=\"percentage\">{total === 0 ? \"0\" : percentage}%</span>\r\n        </>\r\n      ) : (\r\n        \"No feedback given\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsNotification;\r\n","import React from \"react\";\r\n\r\nconst FeedbackOptionsNotification = ({ changeValue }) => {\r\n  return (\r\n    <div>\r\n      <h2>Please leave your feedback</h2>\r\n      <button type=\"button\" name=\"good\" onClick={changeValue}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={changeValue}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" name=\"bad\" onClick={changeValue}>\r\n        bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptionsNotification;\r\n","import React from \"react\";\r\nimport StatisticsNotification from \"../statisticsNotifications/statisticsNotifications\";\r\nimport FeedbackOptionsNotification from \"../feedbackOptionsNotification/feedbackOptionsNotifications\";\r\n\r\nconst SectionNotification = ({\r\n  changeValue,\r\n  total,\r\n  percentage,\r\n  good,\r\n  bad,\r\n  neutral,\r\n}) => {\r\n  return (\r\n    <>\r\n      <FeedbackOptionsNotification changeValue={changeValue} />\r\n      <StatisticsNotification\r\n        total={total}\r\n        percentage={percentage}\r\n        good={good}\r\n        bad={bad}\r\n        netral={neutral}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionNotification;\r\n","import React, { Component } from \"react\";\r\nimport SectionNotification from \"./sectionsNotification/sectionsNotifications\";\r\n\r\nclass Notification extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  changeValue = (e) => {\r\n    const name = e.target.name;\r\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\r\n  };\r\n  // this.countTotalFeedback()\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return bad + good + neutral;\r\n  };\r\n  countPositiveFeedbackPercentage() {\r\n    const { good, neutral, bad } = this.state;\r\n    return Number((good / (bad + good + neutral)) * 100);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SectionNotification\r\n          changeValue={this.changeValue}\r\n          total={this.countTotalFeedback()}\r\n          percentage={this.countPositiveFeedbackPercentage()}\r\n          good={this.state.good}\r\n          bad={this.state.bad}\r\n          netral={this.state.neutral}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    id: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handeleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const wrongContact = this.props.contacts.map((contact) => contact.name);\r\n    wrongContact.find((item) => item === this.state.name)\r\n      ? alert(`${this.state.name} is already in your contacts`)\r\n      : this.props.addContact({\r\n          name: this.state.name,\r\n          number: this.state.number,\r\n          id: uuidv4(),\r\n        });\r\n    this.setState({ name: \"\" });\r\n    this.setState({ number: \"\" });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handeleSubmit}>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add Contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst ContactItem = ({ contact, deleteContact }) => {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button type=\"button\" onClick={() => deleteContact(contact.id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import React, { Component } from \"react\";\r\nimport ContactItem from \"./ContactItem\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul>\r\n          {this.props.contacts.map((contact) => (\r\n            <ContactItem\r\n              deleteContact={this.props.deleteContact}\r\n              key={contact.id}\r\n              contact={contact}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ getFilterValue, filter }) => {\r\n  return (\r\n    <>\r\n      <label>\r\n        <input\r\n          value={filter}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          onChange={getFilterValue}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\n// import Feedback from \"./components/feedbacks/feedbacks\";\n// import TotalFeedback from \"./components/totalFeedback/TotalFeedback\";\n// import RefactoredFeedback from \"./components/RefactoredFeedback/RefactoredFeedback\";\nimport Notification from \"./components/notification/notification\";\nimport Form from \"./contactsForm/Form\";\nimport Contacts from \"./contacts/Contacts\";\nimport Filter from \"./filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  deleteContact = (id) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  getFilterValue = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredData = () => {\n    return this.state.filter\n      ? this.state.contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n        )\n      : this.state.contacts;\n  };\n\n  addContact = (contact) => {\n    this.setState({ contacts: [...this.state.contacts, contact] });\n  };\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <Notification />\n        <h2> Phonebook</h2>\n        <Form contacts={contacts} addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} getFilterValue={this.getFilterValue} />\n        <Contacts\n          deleteContact={this.deleteContact}\n          contacts={this.getFilteredData()}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}